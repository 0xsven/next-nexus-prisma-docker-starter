name: Docker Image CD

env:
  REGISTRY: 'registry.digitalocean.com/literal'
  DROPLET_IP: '207.154.228.169'

on:
  push:
    branches: [master]
  #   pull_request:
  #     branches: [ master ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Build container image
        run: DATABASE_URL=${{ secrets.DATABASE_URL }} docker-compose build

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Tag docker images
        run: docker tag registry.digitalocean.com/literal/frontend:latest frontend
      - run: docker tag registry.digitalocean.com/literal/backend:latest backend
      - run: docker tag registry.digitalocean.com/literal/nginx:latest nginx

      - name: Push to registry
        run: docker-compose push

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build_and_push

    steps:
      - name: Sleep for 10 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'

      - name: Checkout master
        uses: actions/checkout@v2

      - name: Starts the ssh-agent
        uses: webfactory/ssh-agent@v0.4.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_TEST_SSH_PRIVATE_KEY }}

      # - name: Change in config to allow more concurrent ssh connections
      #   run: sudo bash -c "echo 'MaxSessions 150' >> /etc/ssh/sshd_config" && sudo cat /etc/ssh/sshd_config

      # - name: Restart ssh service after config change
      #   run: sudo systemctl restart ssh

      - name: Add ip to known hosts
        run: ssh-keyscan $DROPLET_IP >> ~/.ssh/known_hosts

      - name: Pull latest images
        run: DOCKER_HOST="ssh://root@$DROPLET_IP" docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com

      - name: Update docker compose with new images
        run: DOCKER_HOST="ssh://root@$DROPLET_IP" docker-compose -f ./docker-compose.prod.yml pull

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: Docker-compose up
        run: DOCKER_HOST="ssh://root@$DROPLET_IP" docker-compose -f ./docker-compose.prod.yml up -d
